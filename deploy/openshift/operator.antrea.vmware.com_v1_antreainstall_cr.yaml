apiVersion: operator.antrea.vmware.com/v1
kind: AntreaInstall
metadata:
  name: antrea-install
  namespace: antrea-operator
spec:
  antreaAgentConfig: "# FeatureGates is a map of feature names to bools that enable\
    \ or disable experimental features.\nfeatureGates:\n# Enable AntreaProxy which\
    \ provides ServiceLB for in-cluster Services in antrea-agent.\n# It should be\
    \ enabled on Windows, otherwise NetworkPolicy will not take effect on\n# Service\
    \ traffic.\n#  AntreaProxy: true\n\n# Enable EndpointSlice support in AntreaProxy.\
    \ Don't enable this feature unless that EndpointSlice\n# API version v1beta1 is\
    \ supported and set as enabled in Kubernetes. If AntreaProxy is not enabled,\n\
    # this flag will not take effect.\n#  EndpointSlice: false\n\n# Enable traceflow\
    \ which provides packet tracing feature to diagnose network issue.\n#  Traceflow:\
    \ true\n\n# Enable NodePortLocal feature to make the Pods reachable externally\
    \ through NodePort\n#  NodePortLocal: true\n\n# Enable Antrea ClusterNetworkPolicy\
    \ feature to complement K8s NetworkPolicy for cluster admins\n# to define security\
    \ policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature\
    \ that supports priorities, rule actions and externalEntities in the future.\n\
    #  AntreaPolicy: true\n\n# Enable flowexporter which exports polled conntrack\
    \ connections as IPFIX flow records from each\n# agent to a configured collector.\n\
    #  FlowExporter: false\n\n# Enable collecting and exposing NetworkPolicy statistics.\n\
    #  NetworkPolicyStats: true\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n\
    #  Egress: true\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools.\
    \ AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in\
    \ bridging mode. It is also required to use Antrea for\n# IPAM when configuring\
    \ secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable\
    \ multicast traffic. This feature is supported only with noEncap mode.\n#  Multicast:\
    \ false\n\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n\
    # This feature is supported only with encap mode.\n#  Multicluster: false\n\n\
    # Enable support for provisioning secondary network interfaces for Pods (using\n\
    # Pod annotations). At the moment, Antrea can only create secondary network\n\
    # interfaces using SR-IOV VFs on baremetal Nodes.\n#  SecondaryNetwork: false\n\
    \n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP:\
    \ false\n\n# Enable mirroring or redirecting the traffic Pods send or receive.\n\
    #  TrafficControl: false\n\n# Enable certificated-based authentication for IPsec.\n\
    #  IPsecCertAuth: false\n\n# Name of the OpenVSwitch bridge antrea-agent will\
    \ create and use.\n# Make sure it doesn't conflict with your existing OpenVSwitch\
    \ bridges.\novsBridge: \"br-int\"\n\n# Datapath type to use for the OpenVSwitch\
    \ bridge created by Antrea. Supported values are:\n# - system\n# - netdev\n# 'system'\
    \ is the default value and corresponds to the kernel datapath. Use 'netdev' to\
    \ run\n# OVS in userspace mode. Userspace mode requires the tun device driver\
    \ to be available.\n#ovsDatapathType: system\n\n# Name of the interface antrea-agent\
    \ will create and use for host <--> pod communication.\n# Make sure it doesn't\
    \ conflict with your existing interfaces.\nhostGateway: \"antrea-gw0\"\n\n# Determines\
    \ how traffic is encapsulated. It has the following options:\n# encap(default):\
    \    Inter-node Pod traffic is always encapsulated and Pod to external network\n\
    #                    traffic is SNAT'd.\n# noEncap:           Inter-node Pod traffic\
    \ is not encapsulated; Pod to external network traffic is\n#                 \
    \   SNAT'd if noSNAT is not set to true. Underlying network must be capable of\n\
    #                    supporting Pod traffic across IP subnets.\n# hybrid:    \
    \        noEncap if source and destination Nodes are on the same subnet, otherwise\
    \ encap.\n# networkPolicyOnly: Antrea enforces NetworkPolicy only, and utilizes\
    \ CNI chaining and delegates Pod\n#                    IPAM and connectivity to\
    \ the primary CNI.\n#\ntrafficEncapMode: \"encap\"\n\n# Whether or not to SNAT\
    \ (using the Node IP) the egress traffic from a Pod to the external network.\n\
    # This option is for the noEncap traffic mode only, and the default value is false.\
    \ In the noEncap\n# mode, if the cluster's Pod CIDR is reachable from the external\
    \ network, then the Pod traffic to\n# the external network needs not be SNAT'd.\
    \ In the networkPolicyOnly mode, antrea-agent never\n# performs SNAT and this\
    \ option will be ignored; for other modes it must be set to false.\nnoSNAT: false\n\
    \n# Tunnel protocols used for encapsulating traffic across Nodes. If WireGuard\
    \ is enabled in trafficEncryptionMode,\n# this option will not take effect. Supported\
    \ values:\n# - geneve (default)\n# - vxlan\n# - gre\n# - stt\n# Note that \"gre\"\
    \ is not supported for IPv6 clusters (IPv6-only or dual-stack clusters).\ntunnelType:\
    \ \"geneve\"\n\n# Determines how tunnel traffic is encrypted. Currently encryption\
    \ only works with encap mode.\n# It has the following options:\n# - none (default):\
    \  Inter-node Pod traffic will not be encrypted.\n# - ipsec:           Enable\
    \ IPsec (ESP) encryption for Pod traffic across Nodes. Antrea uses\n#        \
    \            Preshared Key (PSK) for IKE authentication. When IPsec tunnel is\
    \ enabled,\n#                    the PSK value must be passed to Antrea Agent\
    \ through an environment\n#                    variable: ANTREA_IPSEC_PSK.\n#\
    \ - wireGuard:       Enable WireGuard for tunnel traffic encryption.\ntrafficEncryptionMode:\
    \ \"none\"\n\n# Enable bridging mode of Pod network on Nodes, in which the Node's\
    \ transport interface is connected\n# to the OVS bridge, and cross-Node/VLAN traffic\
    \ of AntreaIPAM Pods (Pods whose IP addresses are\n# allocated by AntreaIPAM from\
    \ IPPools) is sent to the underlay network, and forwarded/routed by the\n# underlay\
    \ network.\n# This option requires the `AntreaIPAM` feature gate to be enabled.\
    \ At this moment, it supports only\n# IPv4 and Linux Nodes, and can be enabled\
    \ only when `ovsDatapathType` is `system`,\n# `trafficEncapMode` is `noEncap`,\
    \ and `noSNAT` is true.\nenableBridgingMode: false\n\n# Disable TX checksum offloading\
    \ for container network interfaces. It's supposed to be set to true when the\n\
    # datapath doesn't support TX checksum offloading, which causes packets to be\
    \ dropped due to bad checksum.\n# It affects Pods running on Linux Nodes only.\n\
    disableTXChecksumOffload: false\n\n# Default MTU to use for the host gateway interface\
    \ and the network interface of each Pod.\n# If omitted, antrea-agent will discover\
    \ the MTU of the Node's primary interface and\n# also adjust MTU to accommodate\
    \ for tunnel encapsulation overhead (if applicable).\ndefaultMTU: 0\n\n# wireGuard\
    \ specifies WireGuard related configurations.\nwireGuard:\n  # The port for WireGuard\
    \ to receive traffic.\n  port: 51820\n\negress:\n  # exceptCIDRs is the CIDR ranges\
    \ to which outbound Pod traffic will not be SNAT'd by Egresses.\n  exceptCIDRs:\n\
    \n# ClusterIP CIDR range for Services. It's required when AntreaProxy is not enabled,\
    \ and should be\n# set to the same value as the one specified by --service-cluster-ip-range\
    \ for kube-apiserver. When\n# AntreaProxy is enabled, this parameter is not needed\
    \ and will be ignored if provided.\nserviceCIDR: \"\"\n\n# ClusterIP CIDR range\
    \ for IPv6 Services. It's required when using kube-proxy to provide IPv6 Service\
    \ in a Dual-Stack\n# cluster or an IPv6 only cluster. The value should be the\
    \ same as the configuration for kube-apiserver specified by\n# --service-cluster-ip-range.\
    \ When AntreaProxy is enabled, this parameter is not needed.\n# No default value\
    \ for this field.\nserviceCIDRv6: \"\"\n\n# The port for the antrea-agent APIServer\
    \ to serve on.\n# Note that if it's set to another value, the `containerPort`\
    \ of the `api` port of the\n# `antrea-agent` container must be set to the same\
    \ value.\napiPort: 10350\n\n# Enable metrics exposure via Prometheus. Initializes\
    \ Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Provide the\
    \ IPFIX collector address as a string with format <HOST>:[<PORT>][:<PROTO>].\n\
    # HOST can either be the DNS name or the IP of the Flow Collector. For example,\n\
    # \"flow-aggregator.flow-aggregator.svc\" can be provided as DNS name to connect\n\
    # to the Antrea Flow Aggregator service. If IP, it can be either IPv4 or IPv6.\n\
    # However, IPv6 address should be wrapped with [].\n# If PORT is empty, we default\
    \ to 4739, the standard IPFIX port.\n# If no PROTO is given, we consider \"tls\"\
    \ as default. We support \"tls\", \"tcp\" and\n# \"udp\" protocols. \"tls\" is\
    \ used for securing communication between flow exporter and\n# flow aggregator.\n\
    flowCollectorAddr: \"flow-aggregator.flow-aggregator.svc:4739:tls\"\n\n# Provide\
    \ flow poll interval as a duration string. This determines how often the\n# flow\
    \ exporter dumps connections from the conntrack module. Flow poll interval\n#\
    \ should be greater than or equal to 1s (one second).\n# Valid time units are\
    \ \"ns\", \"us\" (or \"\xB5s\"), \"ms\", \"s\", \"m\", \"h\".\nflowPollInterval:\
    \ \"5s\"\n\n# Provide the active flow export timeout, which is the timeout after\
    \ which a flow\n# record is sent to the collector for active flows. Thus, for\
    \ flows with a continuous\n# stream of packets, a flow record will be exported\
    \ to the collector once the elapsed\n# time since the last export event is equal\
    \ to the value of this timeout.\n# Valid time units are \"ns\", \"us\" (or \"\xB5\
    s\"), \"ms\", \"s\", \"m\", \"h\".\nactiveFlowExportTimeout: \"5s\"\n\n# Provide\
    \ the idle flow export timeout, which is the timeout after which a flow\n# record\
    \ is sent to the collector for idle flows. A flow is considered idle if no\n#\
    \ packet matching this flow has been observed since the last export event.\n#\
    \ Valid time units are \"ns\", \"us\" (or \"\xB5s\"), \"ms\", \"s\", \"m\", \"\
    h\".\nidleFlowExportTimeout: \"15s\"\n\nnodePortLocal:\n# Enable NodePortLocal,\
    \ a feature used to make Pods reachable using port forwarding on the host. To\n\
    # enable this feature, you need to set \"enable\" to true, and ensure that the\
    \ NodePortLocal feature\n# gate is also enabled (which is the default).\n  enable:\
    \ false\n# Provide the port range used by NodePortLocal. When the NodePortLocal\
    \ feature is enabled, a port\n# from that range will be assigned whenever a Pod's\
    \ container defines a specific port to be exposed\n# (each container can define\
    \ a list of ports as pod.spec.containers[].ports), and all Node traffic\n# directed\
    \ to that port will be forwarded to the Pod.\n  portRange: \"61000-62000\"\n\n\
    # Provide the address of Kubernetes apiserver, to override any value provided\
    \ in kubeconfig or InClusterConfig.\n# Defaults to \"\". It must be a host string,\
    \ a host:port pair, or a URL to the base of the apiserver.\nkubeAPIServerOverride:\
    \ \"\"\n\n# Provide the address of DNS server, to override the kube-dns service.\
    \ It's used to resolve hostname in FQDN policy.\n# Defaults to \"\". It must be\
    \ a host string or a host:port pair of the DNS server (e.g. 10.96.0.10, 10.96.0.10:53,\n\
    # [fd00:10:96::a]:53).\ndnsServerOverride: \"\"\n\n# Comma-separated list of Cipher\
    \ Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n\
    # Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver\
    \ will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites:\
    \ \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\n\
    tlsMinVersion: \"\"\n\n# The name of the interface on Node which is used for tunneling\
    \ or routing the traffic across Nodes.\n# If there are multiple IP addresses configured\
    \ on the interface, the first one is used. The IP\n# address used for tunneling\
    \ or routing traffic to remote Nodes is decided in the following order of\n# preference\
    \ (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n\
    # 3. The Node IP\ntransportInterface: \"\"\n\nmulticast:\n# The names of the interfaces\
    \ on Nodes that are used to forward multicast traffic.\n# Defaults to transport\
    \ interface if not set.\n  multicastInterfaces:\n\n# The interval at which the\
    \ antrea-agent sends IGMP queries to Pods.\n# Valid time units are \"ns\", \"\
    us\" (or \"\xB5s\"), \"ms\", \"s\", \"m\", \"h\".\n  igmpQueryInterval: \"125s\"\
    \n\n# The network CIDRs of the interface on Node which is used for tunneling or\
    \ routing the traffic across\n# Nodes. If there are multiple interfaces configured\
    \ the same network CIDR, the first one is used. The\n# IP address used for tunneling\
    \ or routing traffic to remote Nodes is decided in the following order of\n# preference\
    \ (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n\
    # 3. The Node IP\ntransportInterfaceCIDRs:\n\n# Option antreaProxy contains AntreaProxy\
    \ related configuration options.\nantreaProxy:\n  # ProxyAll tells antrea-agent\
    \ to proxy all Service traffic, including NodePort, LoadBalancer, and ClusterIP\
    \ traffic,\n  # regardless of where they come from. Therefore, running kube-proxy\
    \ is no longer required. This requires the AntreaProxy\n  # feature to be enabled.\n\
    \  # Note that this option is experimental. If kube-proxy is removed, option kubeAPIServerOverride\
    \ must be used to access\n  # apiserver directly.\n  proxyAll: false\n  # A string\
    \ array of values which specifies the host IPv4/IPv6 addresses for NodePort. Values\
    \ can be valid IP blocks.\n  # (e.g. 1.2.3.0/24, 1.2.3.4/32). An empty string\
    \ slice is meant to select all host IPv4/IPv6 addresses.\n  # Note that the option\
    \ is only valid when proxyAll is true.\n  nodePortAddresses:\n  # An array of\
    \ string values to specify a list of Services which should be ignored by AntreaProxy\
    \ (traffic to these\n  # Services will not be load-balanced). Values can be a\
    \ valid ClusterIP (e.g. 10.11.1.2) or a Service name\n  # with Namespace (e.g.\
    \ kube-system/kube-dns)\n  skipServices:\n  # When ProxyLoadBalancerIPs is set\
    \ to false, AntreaProxy no longer load-balances traffic destined to the\n  # External\
    \ IPs of LoadBalancer Services. This is useful when the external LoadBalancer\
    \ provides additional\n  # capabilities (e.g. TLS termination) and it is desirable\
    \ for Pod-to-ExternalIP traffic to be sent to the\n  # external LoadBalancer instead\
    \ of being load-balanced to an Endpoint directly by AntreaProxy.\n  # Note that\
    \ setting ProxyLoadBalancerIPs to false usually only makes sense when ProxyAll\
    \ is set to true and\n  # kube-proxy is removed from the cluser, otherwise kube-proxy\
    \ will still load-balance this traffic.\n  proxyLoadBalancerIPs: true\n\n# IPsec\
    \ tunnel related configurations.\nipsec:\n  # The authentication mode of IPsec\
    \ tunnel. It has the following options:\n  # - psk (default): Use pre-shared key\
    \ (PSK) for IKE authentication.\n  # - cert:          Use CA-signed certificates\
    \ for IKE authentication. This option requires the `IPsecCertAuth`\n  #      \
    \            feature gate to be enabled.\n  authenticationMode: \"psk\"\n\nmulticluster:\n\
    # Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This\
    \ feature is supported only with encap mode.\n  enable: false\n# The Namespace\
    \ where Antrea Multi-cluster Controller is running.\n# The default is antrea-agent's\
    \ Namespace.\n  namespace: \"\"\n"
  antreaCNIConfig: "{\n    \"cniVersion\":\"0.3.0\",\n    \"name\": \"antrea\",\n\
    \    \"plugins\": [\n        {\n            \"type\": \"antrea\",\n          \
    \  \"ipam\": {\n                \"type\": \"host-local\"\n            }\n    \
    \    }\n        ,\n        {\n            \"type\": \"portmap\",\n           \
    \ \"capabilities\": {\"portMappings\": true}\n        }\n        ,\n        {\n\
    \            \"type\": \"bandwidth\",\n            \"capabilities\": {\"bandwidth\"\
    : true}\n        }\n    ]\n}\n"
  antreaControllerConfig: "# FeatureGates is a map of feature names to bools that\
    \ enable or disable experimental features.\nfeatureGates:\n# Enable traceflow\
    \ which provides packet tracing feature to diagnose network issue.\n#  Traceflow:\
    \ true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy\
    \ for cluster admins\n# to define security policies which apply to the entire\
    \ cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule\
    \ actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable\
    \ collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\
    \n# Enable multicast traffic. This feature is supported only with noEncap mode.\n\
    #  Multicast: false\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n\
    #  Egress: true\n\n# Run Kubernetes NodeIPAMController with Antrea.\n#  NodeIPAM:\
    \ false\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools.\
    \ AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in\
    \ bridging mode. It is also required to use Antrea for\n# IPAM when configuring\
    \ secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable\
    \ managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP:\
    \ false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth:\
    \ false\n\n# The port for the antrea-controller APIServer to serve on.\n# Note\
    \ that if it's set to another value, the `containerPort` of the `api` port of\
    \ the\n# `antrea-controller` container must be set to the same value.\napiPort:\
    \ 10349\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics\
    \ listener.\nenablePrometheusMetrics: true\n\n# Indicates whether to use auto-generated\
    \ self-signed TLS certificate.\n# If false, a Secret named \"antrea-controller-tls\"\
    \ must be provided with the following keys:\n#   ca.crt: <CA certificate>\n# \
    \  tls.crt: <TLS certificate>\n#   tls.key: <TLS private key>\nselfSignedCert:\
    \ true\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go\
    \ Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n\
    # Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver\
    \ will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites:\
    \ \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\n\
    tlsMinVersion: \"\"\n\nnodeIPAM:\n  # Enable the integrated Node IPAM controller\
    \ within the Antrea controller.\n  enableNodeIPAM: false\n  # CIDR ranges for\
    \ Pods in cluster. String array containing single CIDR range, or multiple ranges.\n\
    \  # The CIDRs could be either IPv4 or IPv6. At most one CIDR may be specified\
    \ for each IP family.\n  # Value ignored when enableNodeIPAM is false.\n  clusterCIDRs:\n\
    \  # CIDR ranges for Services in cluster. It is not necessary to specify it when\
    \ there is no overlap with clusterCIDRs.\n  # Value ignored when enableNodeIPAM\
    \ is false.\n  serviceCIDR: \"\"\n  serviceCIDRv6: \"\"\n  # Mask size for IPv4\
    \ Node CIDR in IPv4 or dual-stack cluster. Value ignored when enableNodeIPAM is\
    \ false\n  # or when IPv4 Pod CIDR is not configured. Valid range is 16 to 30.\n\
    \  nodeCIDRMaskSizeIPv4: 24\n  # Mask size for IPv6 Node CIDR in IPv6 or dual-stack\
    \ cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv6 Pod CIDR\
    \ is not configured. Valid range is 64 to 126.\n  nodeCIDRMaskSizeIPv6: 64\n\n\
    ipsecCSRSigner:\n  # Determines the auto-approve policy of Antrea CSR signer for\
    \ IPsec certificates management.\n  # If enabled, Antrea will auto-approve the\
    \ CertificateSingingRequest (CSR) if its subject and x509 extensions\n  # are\
    \ permitted, and the requestor can be validated. If K8s `BoundServiceAccountTokenVolume`\
    \ feature is enabled,\n  # the Pod identity will also be validated to provide\
    \ maximum security.\n  # If set to false, Antrea will not auto-approve CertificateSingingRequests\
    \ and they need to be approved\n  # manually by `kubectl certificate approve`.\n\
    \  autoApprove: true\n  # Indicates whether to use auto-generated self-signed\
    \ CA certificate.\n  # If false, a Secret named \"antrea-ipsec-ca\" must be provided\
    \ with the following keys:\n  #   tls.crt: <CA certificate>\n  #   tls.key: <CA\
    \ private key>\n  selfSignedCA: true\n"
  antreaImage: antrea/antrea-ubi:v1.7.1
  platform: openshift

